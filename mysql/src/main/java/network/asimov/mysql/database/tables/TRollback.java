/*
 * This file is generated by jOOQ.
 */
package network.asimov.mysql.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import network.asimov.mysql.database.AsimovServer;
import network.asimov.mysql.database.Indexes;
import network.asimov.mysql.database.Keys;
import network.asimov.mysql.database.tables.records.TRollbackRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRollback extends TableImpl<TRollbackRecord> {

    private static final long serialVersionUID = -1953696115;

    /**
     * The reference instance of <code>asimov_server.t_rollback</code>
     */
    public static final TRollback T_ROLLBACK = new TRollback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRollbackRecord> getRecordType() {
        return TRollbackRecord.class;
    }

    /**
     * The column <code>asimov_server.t_rollback.id</code>. 主键
     */
    public final TableField<TRollbackRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>asimov_server.t_rollback.height</code>. 块高
     */
    public final TableField<TRollbackRecord, Long> HEIGHT = createField("height", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "块高");

    /**
     * The column <code>asimov_server.t_rollback.record_id</code>. 需要回滚的表ID
     */
    public final TableField<TRollbackRecord, Long> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "需要回滚的表ID");

    /**
     * The column <code>asimov_server.t_rollback.table_name</code>. 需要回滚的表名
     */
    public final TableField<TRollbackRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "需要回滚的表名");

    /**
     * The column <code>asimov_server.t_rollback.original_value</code>. 原始值
     */
    public final TableField<TRollbackRecord, Byte> ORIGINAL_VALUE = createField("original_value", org.jooq.impl.SQLDataType.TINYINT, this, "原始值");

    /**
     * The column <code>asimov_server.t_rollback.expect_value</code>. 期望值
     */
    public final TableField<TRollbackRecord, Byte> EXPECT_VALUE = createField("expect_value", org.jooq.impl.SQLDataType.TINYINT, this, "期望值");

    /**
     * The column <code>asimov_server.t_rollback.create_time</code>. 创建时间
     */
    public final TableField<TRollbackRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "创建时间");

    /**
     * Create a <code>asimov_server.t_rollback</code> table reference
     */
    public TRollback() {
        this(DSL.name("t_rollback"), null);
    }

    /**
     * Create an aliased <code>asimov_server.t_rollback</code> table reference
     */
    public TRollback(String alias) {
        this(DSL.name(alias), T_ROLLBACK);
    }

    /**
     * Create an aliased <code>asimov_server.t_rollback</code> table reference
     */
    public TRollback(Name alias) {
        this(alias, T_ROLLBACK);
    }

    private TRollback(Name alias, Table<TRollbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRollback(Name alias, Table<TRollbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TRollback(Table<O> child, ForeignKey<O, TRollbackRecord> key) {
        super(child, key, T_ROLLBACK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AsimovServer.ASIMOV_SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLLBACK_INDEX_HEIGHT, Indexes.T_ROLLBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRollbackRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLLBACK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRollbackRecord>> getKeys() {
        return Arrays.<UniqueKey<TRollbackRecord>>asList(Keys.KEY_T_ROLLBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRollback as(String alias) {
        return new TRollback(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRollback as(Name alias) {
        return new TRollback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRollback rename(String name) {
        return new TRollback(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRollback rename(Name name) {
        return new TRollback(name, null);
    }
}
