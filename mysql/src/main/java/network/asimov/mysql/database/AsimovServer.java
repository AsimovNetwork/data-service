/*
 * This file is generated by jOOQ.
 */
package network.asimov.mysql.database;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import network.asimov.mysql.database.tables.TChainNode;
import network.asimov.mysql.database.tables.TDaoAccount;
import network.asimov.mysql.database.tables.TDaoAsset;
import network.asimov.mysql.database.tables.TDaoIndivisibleAsset;
import network.asimov.mysql.database.tables.TDaoMessage;
import network.asimov.mysql.database.tables.TDaoOperation;
import network.asimov.mysql.database.tables.TDaoOrganization;
import network.asimov.mysql.database.tables.TFoundationOperation;
import network.asimov.mysql.database.tables.TMinerOperation;
import network.asimov.mysql.database.tables.TRollback;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsimovServer extends SchemaImpl {

    private static final long serialVersionUID = 412843488;

    /**
     * The reference instance of <code>asimov_server</code>
     */
    public static final AsimovServer ASIMOV_SERVER = new AsimovServer();

    /**
     * The table <code>asimov_server.t_chain_node</code>.
     */
    public final TChainNode T_CHAIN_NODE = network.asimov.mysql.database.tables.TChainNode.T_CHAIN_NODE;

    /**
     * The table <code>asimov_server.t_dao_account</code>.
     */
    public final TDaoAccount T_DAO_ACCOUNT = network.asimov.mysql.database.tables.TDaoAccount.T_DAO_ACCOUNT;

    /**
     * The table <code>asimov_server.t_dao_asset</code>.
     */
    public final TDaoAsset T_DAO_ASSET = network.asimov.mysql.database.tables.TDaoAsset.T_DAO_ASSET;

    /**
     * The table <code>asimov_server.t_dao_indivisible_asset</code>.
     */
    public final TDaoIndivisibleAsset T_DAO_INDIVISIBLE_ASSET = network.asimov.mysql.database.tables.TDaoIndivisibleAsset.T_DAO_INDIVISIBLE_ASSET;

    /**
     * The table <code>asimov_server.t_dao_message</code>.
     */
    public final TDaoMessage T_DAO_MESSAGE = network.asimov.mysql.database.tables.TDaoMessage.T_DAO_MESSAGE;

    /**
     * The table <code>asimov_server.t_dao_operation</code>.
     */
    public final TDaoOperation T_DAO_OPERATION = network.asimov.mysql.database.tables.TDaoOperation.T_DAO_OPERATION;

    /**
     * The table <code>asimov_server.t_dao_organization</code>.
     */
    public final TDaoOrganization T_DAO_ORGANIZATION = network.asimov.mysql.database.tables.TDaoOrganization.T_DAO_ORGANIZATION;

    /**
     * The table <code>asimov_server.t_foundation_operation</code>.
     */
    public final TFoundationOperation T_FOUNDATION_OPERATION = network.asimov.mysql.database.tables.TFoundationOperation.T_FOUNDATION_OPERATION;

    /**
     * The table <code>asimov_server.t_miner_operation</code>.
     */
    public final TMinerOperation T_MINER_OPERATION = network.asimov.mysql.database.tables.TMinerOperation.T_MINER_OPERATION;

    /**
     * The table <code>asimov_server.t_rollback</code>.
     */
    public final TRollback T_ROLLBACK = network.asimov.mysql.database.tables.TRollback.T_ROLLBACK;

    /**
     * No further instances allowed
     */
    private AsimovServer() {
        super("asimov_server", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            TChainNode.T_CHAIN_NODE,
            TDaoAccount.T_DAO_ACCOUNT,
            TDaoAsset.T_DAO_ASSET,
            TDaoIndivisibleAsset.T_DAO_INDIVISIBLE_ASSET,
            TDaoMessage.T_DAO_MESSAGE,
            TDaoOperation.T_DAO_OPERATION,
            TDaoOrganization.T_DAO_ORGANIZATION,
            TFoundationOperation.T_FOUNDATION_OPERATION,
            TMinerOperation.T_MINER_OPERATION,
            TRollback.T_ROLLBACK);
    }
}
