/*
 * This file is generated by jOOQ.
 */
package network.asimov.mysql.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import network.asimov.mysql.database.AsimovServer;
import network.asimov.mysql.database.Indexes;
import network.asimov.mysql.database.Keys;
import network.asimov.mysql.database.tables.records.TDaoMessageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDaoMessage extends TableImpl<TDaoMessageRecord> {

    private static final long serialVersionUID = 1193952374;

    /**
     * The reference instance of <code>asimov_server.t_dao_message</code>
     */
    public static final TDaoMessage T_DAO_MESSAGE = new TDaoMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDaoMessageRecord> getRecordType() {
        return TDaoMessageRecord.class;
    }

    /**
     * The column <code>asimov_server.t_dao_message.id</code>. 主键
     */
    public final TableField<TDaoMessageRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>asimov_server.t_dao_message.category</code>. 消息分类：1：成为组织的普通成员，2：组织有新成员加入，3：成功创建组织，4：成员被从组织中移除，5：组织中移除了成员，6：成为组织新主席，7：主席换人，8：财务支出，9：发行资产，10：修改组织logo，11：修改组织名称，12：收到投票消息，13：提议投票未通过，14：提议到期，15：被邀请进入组织，16：关闭组织，17：组织收到资产 18：组织增发资产
     */
    public final TableField<TDaoMessageRecord, Integer> CATEGORY = createField("category", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "消息分类：1：成为组织的普通成员，2：组织有新成员加入，3：成功创建组织，4：成员被从组织中移除，5：组织中移除了成员，6：成为组织新主席，7：主席换人，8：财务支出，9：发行资产，10：修改组织logo，11：修改组织名称，12：收到投票消息，13：提议投票未通过，14：提议到期，15：被邀请进入组织，16：关闭组织，17：组织收到资产 18：组织增发资产");

    /**
     * The column <code>asimov_server.t_dao_message.type</code>. 消息类型：0-只读消息,1-直接执行,2-投票
     */
    public final TableField<TDaoMessageRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "消息类型：0-只读消息,1-直接执行,2-投票");

    /**
     * The column <code>asimov_server.t_dao_message.message_position</code>. 消息适用范围：0、官网，1、DAO组织，2、两者皆有
     */
    public final TableField<TDaoMessageRecord, Integer> MESSAGE_POSITION = createField("message_position", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "消息适用范围：0、官网，1、DAO组织，2、两者皆有");

    /**
     * The column <code>asimov_server.t_dao_message.contract_address</code>. 组织合约地址
     */
    public final TableField<TDaoMessageRecord, String> CONTRACT_ADDRESS = createField("contract_address", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "组织合约地址");

    /**
     * The column <code>asimov_server.t_dao_message.receiver</code>. 消息接受人地址
     */
    public final TableField<TDaoMessageRecord, String> RECEIVER = createField("receiver", org.jooq.impl.SQLDataType.VARCHAR(64), this, "消息接受人地址");

    /**
     * The column <code>asimov_server.t_dao_message.additional_info</code>. 附加信息(JSON字符串)
     */
    public final TableField<TDaoMessageRecord, String> ADDITIONAL_INFO = createField("additional_info", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "附加信息(JSON字符串)");

    /**
     * The column <code>asimov_server.t_dao_message.state</code>. 消息状态：0-未读，1-已读, 2-已拒绝，3-已同意
     */
    public final TableField<TDaoMessageRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "消息状态：0-未读，1-已读, 2-已拒绝，3-已同意");

    /**
     * The column <code>asimov_server.t_dao_message.create_time</code>. 创建时间
     */
    public final TableField<TDaoMessageRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "创建时间");

    /**
     * The column <code>asimov_server.t_dao_message.update_time</code>. 更新时间
     */
    public final TableField<TDaoMessageRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "更新时间");

    /**
     * Create a <code>asimov_server.t_dao_message</code> table reference
     */
    public TDaoMessage() {
        this(DSL.name("t_dao_message"), null);
    }

    /**
     * Create an aliased <code>asimov_server.t_dao_message</code> table reference
     */
    public TDaoMessage(String alias) {
        this(DSL.name(alias), T_DAO_MESSAGE);
    }

    /**
     * Create an aliased <code>asimov_server.t_dao_message</code> table reference
     */
    public TDaoMessage(Name alias) {
        this(alias, T_DAO_MESSAGE);
    }

    private TDaoMessage(Name alias, Table<TDaoMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDaoMessage(Name alias, Table<TDaoMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TDaoMessage(Table<O> child, ForeignKey<O, TDaoMessageRecord> key) {
        super(child, key, T_DAO_MESSAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AsimovServer.ASIMOV_SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_DAO_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDaoMessageRecord> getPrimaryKey() {
        return Keys.KEY_T_DAO_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDaoMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<TDaoMessageRecord>>asList(Keys.KEY_T_DAO_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDaoMessage as(String alias) {
        return new TDaoMessage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDaoMessage as(Name alias) {
        return new TDaoMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDaoMessage rename(String name) {
        return new TDaoMessage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TDaoMessage rename(Name name) {
        return new TDaoMessage(name, null);
    }
}
