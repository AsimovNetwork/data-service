/*
 * This file is generated by jOOQ.
 */
package network.asimov.mysql.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import network.asimov.mysql.database.AsimovServer;
import network.asimov.mysql.database.Indexes;
import network.asimov.mysql.database.Keys;
import network.asimov.mysql.database.tables.records.TChainNodeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TChainNode extends TableImpl<TChainNodeRecord> {

    private static final long serialVersionUID = -1421558488;

    /**
     * The reference instance of <code>asimov_server.t_chain_node</code>
     */
    public static final TChainNode T_CHAIN_NODE = new TChainNode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TChainNodeRecord> getRecordType() {
        return TChainNodeRecord.class;
    }

    /**
     * The column <code>asimov_server.t_chain_node.id</code>. 主键
     */
    public final TableField<TChainNodeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>asimov_server.t_chain_node.ip</code>. IP
     */
    public final TableField<TChainNodeRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "IP");

    /**
     * The column <code>asimov_server.t_chain_node.city</code>. 城市
     */
    public final TableField<TChainNodeRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "城市");

    /**
     * The column <code>asimov_server.t_chain_node.subdivision</code>. 省份
     */
    public final TableField<TChainNodeRecord, String> SUBDIVISION = createField("subdivision", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "省份");

    /**
     * The column <code>asimov_server.t_chain_node.country</code>. 国家
     */
    public final TableField<TChainNodeRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "国家");

    /**
     * The column <code>asimov_server.t_chain_node.longitude</code>. 经度
     */
    public final TableField<TChainNodeRecord, String> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "经度");

    /**
     * The column <code>asimov_server.t_chain_node.latitude</code>. 纬度
     */
    public final TableField<TChainNodeRecord, String> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "纬度");

    /**
     * The column <code>asimov_server.t_chain_node.create_time</code>. 创建时间
     */
    public final TableField<TChainNodeRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "创建时间");

    /**
     * The column <code>asimov_server.t_chain_node.update_time</code>. 更新时间
     */
    public final TableField<TChainNodeRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "更新时间");

    /**
     * Create a <code>asimov_server.t_chain_node</code> table reference
     */
    public TChainNode() {
        this(DSL.name("t_chain_node"), null);
    }

    /**
     * Create an aliased <code>asimov_server.t_chain_node</code> table reference
     */
    public TChainNode(String alias) {
        this(DSL.name(alias), T_CHAIN_NODE);
    }

    /**
     * Create an aliased <code>asimov_server.t_chain_node</code> table reference
     */
    public TChainNode(Name alias) {
        this(alias, T_CHAIN_NODE);
    }

    private TChainNode(Name alias, Table<TChainNodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TChainNode(Name alias, Table<TChainNodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TChainNode(Table<O> child, ForeignKey<O, TChainNodeRecord> key) {
        super(child, key, T_CHAIN_NODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AsimovServer.ASIMOV_SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CHAIN_NODE_INDEX_IP, Indexes.T_CHAIN_NODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TChainNodeRecord> getPrimaryKey() {
        return Keys.KEY_T_CHAIN_NODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TChainNodeRecord>> getKeys() {
        return Arrays.<UniqueKey<TChainNodeRecord>>asList(Keys.KEY_T_CHAIN_NODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TChainNode as(String alias) {
        return new TChainNode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TChainNode as(Name alias) {
        return new TChainNode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TChainNode rename(String name) {
        return new TChainNode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TChainNode rename(Name name) {
        return new TChainNode(name, null);
    }
}
