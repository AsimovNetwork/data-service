/*
 * This file is generated by jOOQ.
 */
package network.asimov.mysql.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import network.asimov.mysql.database.AsimovServer;
import network.asimov.mysql.database.Indexes;
import network.asimov.mysql.database.Keys;
import network.asimov.mysql.database.tables.records.TDaoOrganizationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDaoOrganization extends TableImpl<TDaoOrganizationRecord> {

    private static final long serialVersionUID = -1882902476;

    /**
     * The reference instance of <code>asimov_server.t_dao_organization</code>
     */
    public static final TDaoOrganization T_DAO_ORGANIZATION = new TDaoOrganization();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDaoOrganizationRecord> getRecordType() {
        return TDaoOrganizationRecord.class;
    }

    /**
     * The column <code>asimov_server.t_dao_organization.id</code>.
     */
    public final TableField<TDaoOrganizationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>asimov_server.t_dao_organization.tx_hash</code>. 交易Hash
     */
    public final TableField<TDaoOrganizationRecord, String> TX_HASH = createField("tx_hash", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "交易Hash");

    /**
     * The column <code>asimov_server.t_dao_organization.contract_address</code>. 组织合约地址
     */
    public final TableField<TDaoOrganizationRecord, String> CONTRACT_ADDRESS = createField("contract_address", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "组织合约地址");

    /**
     * The column <code>asimov_server.t_dao_organization.vote_contract_address</code>. 投票合约地址
     */
    public final TableField<TDaoOrganizationRecord, String> VOTE_CONTRACT_ADDRESS = createField("vote_contract_address", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "投票合约地址");

    /**
     * The column <code>asimov_server.t_dao_organization.creator_address</code>. 创建人地址
     */
    public final TableField<TDaoOrganizationRecord, String> CREATOR_ADDRESS = createField("creator_address", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人地址");

    /**
     * The column <code>asimov_server.t_dao_organization.org_name</code>. 组织名称
     */
    public final TableField<TDaoOrganizationRecord, String> ORG_NAME = createField("org_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "组织名称");

    /**
     * The column <code>asimov_server.t_dao_organization.org_logo</code>. 组织logo
     */
    public final TableField<TDaoOrganizationRecord, String> ORG_LOGO = createField("org_logo", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "组织logo");

    /**
     * The column <code>asimov_server.t_dao_organization.state</code>. 组织状态：0-正常，1-被关闭，2-初始化，尚未上链
     */
    public final TableField<TDaoOrganizationRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "组织状态：0-正常，1-被关闭，2-初始化，尚未上链");

    /**
     * The column <code>asimov_server.t_dao_organization.create_time</code>. 创建时间
     */
    public final TableField<TDaoOrganizationRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "创建时间");

    /**
     * The column <code>asimov_server.t_dao_organization.update_time</code>. 修改时间
     */
    public final TableField<TDaoOrganizationRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "修改时间");

    /**
     * Create a <code>asimov_server.t_dao_organization</code> table reference
     */
    public TDaoOrganization() {
        this(DSL.name("t_dao_organization"), null);
    }

    /**
     * Create an aliased <code>asimov_server.t_dao_organization</code> table reference
     */
    public TDaoOrganization(String alias) {
        this(DSL.name(alias), T_DAO_ORGANIZATION);
    }

    /**
     * Create an aliased <code>asimov_server.t_dao_organization</code> table reference
     */
    public TDaoOrganization(Name alias) {
        this(alias, T_DAO_ORGANIZATION);
    }

    private TDaoOrganization(Name alias, Table<TDaoOrganizationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDaoOrganization(Name alias, Table<TDaoOrganizationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TDaoOrganization(Table<O> child, ForeignKey<O, TDaoOrganizationRecord> key) {
        super(child, key, T_DAO_ORGANIZATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AsimovServer.ASIMOV_SERVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_DAO_ORGANIZATION_PRIMARY, Indexes.T_DAO_ORGANIZATION_T_ORGANIZATION_IDX_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDaoOrganizationRecord> getPrimaryKey() {
        return Keys.KEY_T_DAO_ORGANIZATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDaoOrganizationRecord>> getKeys() {
        return Arrays.<UniqueKey<TDaoOrganizationRecord>>asList(Keys.KEY_T_DAO_ORGANIZATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDaoOrganization as(String alias) {
        return new TDaoOrganization(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDaoOrganization as(Name alias) {
        return new TDaoOrganization(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDaoOrganization rename(String name) {
        return new TDaoOrganization(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TDaoOrganization rename(Name name) {
        return new TDaoOrganization(name, null);
    }
}
